name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Run pytest
        run: pytest -q

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install root deps
        run: npm ci || npm install
      - name: Install web deps
        run: npm ci --prefix apps/web || npm install --prefix apps/web
      - name: Build web
        run: npm run -s build --prefix apps/web

  contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci || npm install
      - name: Compile contracts
        run: HARDHAT_CONFIG=hardhat.config.cjs npx hardhat compile
      - name: Start Ganache
        run: docker run -d --name ganache -p 8545:8545 trufflesuite/ganache:v7.9.2 --wallet.totalAccounts=10
      - name: Wait for Ganache
        run: |
          for i in {1..15}; do nc -z 127.0.0.1 8545 && exit 0; sleep 2; done; exit 1
      - name: Run Hardhat tests
        run: HARDHAT_CONFIG=hardhat.config.cjs npx hardhat test --network localhost
      - name: Stop Ganache
        if: always()
        run: docker rm -f ganache || true

  publish:
    if: ${{ secrets.IPFS_API != '' }}
    runs-on: ubuntu-latest
    needs: [python, web, contracts]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Make dist folder
        run: mkdir -p dist && echo '<html><body>CI Publish</body></html>' > dist/index.html
      - name: Publish to IPFS
        env:
          IPFS_API: ${{ secrets.IPFS_API }}
          IPFS_GATEWAY: ${{ secrets.IPFS_GATEWAY }}
          IPFS_AUTH: ${{ secrets.IPFS_AUTH }}
        run: python3 scripts/publish_to_ipfs.py dist | tee publish.result.jsonname: swarm-ci
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install ruff mypy
      - name: Lint (ruff)
        run: ruff check .
      - name: Typecheck (mypy)
        run: mypy services || true
      - name: Tests (pytest)
        run: pytest -q
      # The following IPFS publish/verify example is disabled by default because
      # GH runners won't have an IPFS API/gateway running. Enable when you wire
      # an IPFS service or use Trustiva IPFS.
      # - name: Publish dist to IPFS (example)
      #   run: |
      #     python3 scripts/publish_to_ipfs.py dist > publish.out.json || true
      #     cat publish.out.json || true
      # - name: Verify gateway renders (example)
      #   run: |
      #     if [ -f publish.out.json ]; then
      #       CID=$(jq -r '.root // .cid' publish.out.json)
      #       echo "CID: $CID"
      #     fi
